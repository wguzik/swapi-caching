name: "$(Date:yyyy)-$(Date:MM)-$(Rev:r)"

pr:
- main

trigger:
  batch: true
  branches:
    include:
    - main
    - feature/*
  paths:
    include:
    - src/*
    - tests/*
    - prisma/*
  

pool:
  vmImage: ubuntu-latest

jobs:
- job: build
  displayName: Build
  steps:

  - task: CmdLine@2
    displayName: 'Move .env file'
    inputs:
      script: mv $(Build.SourcesDirectory)/.env.example $(Build.SourcesDirectory)/.env

  - task: DockerCompose@0
    displayName: Run Docker-compose-up
    inputs:
      containerregistrytype: Container Registry
      dockerComposeFile: $(Build.SourcesDirectory)/docker-compose.yaml
      dockerComposeCommand: 'up -d'

  - task: CmdLine@2
    displayName: 'ls'
    inputs:
      script: ls -l $(Build.SourcesDirectory)

  - task: CmdLine@2
    displayName: 'Move .env file with e2e payload'
    inputs:
      script: mv $(Build.SourcesDirectory)/.env.e2e $(Build.SourcesDirectory)/.env

  - task: CmdLine@2
    displayName: 'Check .env file'
    inputs:
      script: cat $(Build.SourcesDirectory)/.env
    
  - task: UseNode@1
    inputs:
      version: '20.x'
      checkLatest: true
  
  - task: Npm@1
    displayName: install dependencies
    inputs:
      command: 'install'
      workingDir: '$(Build.SourcesDirectory)/'

  - task: Npm@1
    displayName: run test
    inputs:
      command: 'custom'
      workingDir: '$(Build.SourcesDirectory)/'
      customCommand: 'run test e2e'

- job:
  # https://blog.devgenius.io/create-work-item-on-pipeline-failure-in-azure-devops-yaml-pipeline-973bd175166
  displayName: RaiseBug
  dependsOn: Build
  condition: failed()
  steps:
  - task: CmdLine@2
    displayName: Install Azure DevOps Extension
    inputs:
      script: 'az extension add --name azure-devops'